#!/bin/bash

# üê≥ Docker Manager para EuaConecta
# Script para gerenciar containers facilmente

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para mostrar status
show_status() {
    echo -e "${BLUE}üìä Status dos Containers:${NC}"
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
    echo ""
}

# Fun√ß√£o para mostrar logs
show_logs() {
    local container=$1
    if [ -z "$container" ]; then
        echo -e "${RED}‚ùå Especifique um container${NC}"
        echo "Containers dispon√≠veis:"
        docker ps --format "{{.Names}}"
        return 1
    fi

    echo -e "${BLUE}üìã Logs do container: $container${NC}"
    docker logs -f "$container"
}

# Fun√ß√£o para reiniciar container
restart_container() {
    local container=$1
    if [ -z "$container" ]; then
        echo -e "${RED}‚ùå Especifique um container${NC}"
        return 1
    fi

    echo -e "${YELLOW}üîÑ Reiniciando container: $container${NC}"
    docker restart "$container"
    echo -e "${GREEN}‚úÖ Container $container reiniciado${NC}"
}

# Fun√ß√£o para parar todos os containers
stop_all() {
    echo -e "${YELLOW}üõë Parando todos os containers...${NC}"
    docker-compose -f docker/docker-compose.yml -f docker/docker-compose.override.yml down
    echo -e "${GREEN}‚úÖ Todos os containers parados${NC}"
}

# Fun√ß√£o para iniciar todos os containers
start_all() {
    echo -e "${GREEN}üöÄ Iniciando todos os containers...${NC}"
    docker-compose -f docker/docker-compose.yml -f docker/docker-compose.override.yml up -d
    echo -e "${GREEN}‚úÖ Todos os containers iniciados${NC}"
}

# Fun√ß√£o para mostrar ajuda
show_help() {
    echo -e "${BLUE}üê≥ Docker Manager para EuaConecta${NC}"
    echo ""
    echo "Uso: $0 [comando] [op√ß√µes]"
    echo ""
    echo "Comandos:"
    echo "  status                    - Mostra status dos containers"
    echo "  logs [container]         - Mostra logs de um container"
    echo "  restart [container]      - Reinicia um container"
    echo "  start                    - Inicia todos os containers"
    echo "  stop                     - Para todos os containers"
    echo "  portainer               - Abre Portainer no navegador"
    echo "  health                   - Verifica sa√∫de dos servi√ßos"
    echo "  clean                    - Limpa containers e volumes n√£o utilizados"
    echo ""
    echo "Exemplos:"
    echo "  $0 status"
    echo "  $0 logs docker-app-1"
    echo "  $0 restart docker-app-1"
    echo "  $0 portainer"
}

# Fun√ß√£o para abrir Portainer
open_portainer() {
    echo -e "${BLUE}üåê Abrindo Portainer...${NC}"
    echo "Portainer est√° dispon√≠vel em:"
    echo "  - HTTP:  http://localhost:8000"
    echo "  - HTTPS: https://localhost:9443"
    echo ""
    echo "Acesse no navegador para gerenciar os containers!"
}

# Fun√ß√£o para verificar sa√∫de
check_health() {
    echo -e "${BLUE}üè• Verificando sa√∫de dos servi√ßos...${NC}"

    # Verificar se os containers est√£o rodando
    if docker ps | grep -q "docker-app-1"; then
        echo -e "${GREEN}‚úÖ App Produ√ß√£o: Rodando${NC}"
    else
        echo -e "${RED}‚ùå App Produ√ß√£o: Parado${NC}"
    fi

    if docker ps | grep -q "docker-app-dev-1"; then
        echo -e "${GREEN}‚úÖ App Desenvolvimento: Rodando${NC}"
    else
        echo -e "${RED}‚ùå App Desenvolvimento: Parado${NC}"
    fi

    if docker ps | grep -q "docker-db-1"; then
        echo -e "${GREEN}‚úÖ PostgreSQL: Rodando${NC}"
    else
        echo -e "${RED}‚ùå PostgreSQL: Parado${NC}"
    fi

    if docker ps | grep -q "docker-redis-1"; then
        echo -e "${GREEN}‚úÖ Redis: Rodando${NC}"
    else
        echo -e "${RED}‚ùå Redis: Parado${NC}"
    fi

    if docker ps | grep -q "docker-minio-1"; then
        echo -e "${GREEN}‚úÖ MinIO: Rodando${NC}"
    else
        echo -e "${RED}‚ùå MinIO: Parado${NC}"
    fi

    if docker ps | grep -q "docker-nginx-1"; then
        echo -e "${GREEN}‚úÖ Nginx: Rodando${NC}"
    else
        echo -e "${RED}‚ùå Nginx: Parado${NC}"
    fi

    if docker ps | grep -q "portainer"; then
        echo -e "${GREEN}‚úÖ Portainer: Rodando${NC}"
    else
        echo -e "${RED}‚ùå Portainer: Parado${NC}"
    fi
}

# Fun√ß√£o para limpeza
clean_docker() {
    echo -e "${YELLOW}üßπ Limpando containers e volumes n√£o utilizados...${NC}"
    docker system prune -f
    docker volume prune -f
    echo -e "${GREEN}‚úÖ Limpeza conclu√≠da${NC}"
}

# Main
case "$1" in
    "status")
        show_status
        ;;
    "logs")
        show_logs "$2"
        ;;
    "restart")
        restart_container "$2"
        ;;
    "start")
        start_all
        ;;
    "stop")
        stop_all
        ;;
    "portainer")
        open_portainer
        ;;
    "health")
        check_health
        ;;
    "clean")
        clean_docker
        ;;
    *)
        show_help
        ;;
esac
