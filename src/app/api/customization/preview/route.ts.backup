import { NextRequest, NextResponse } from 'next/server'
import { configService } from '@/lib/config/config-service'
import type { SystemCustomization } from '@/lib/config/system-customization'

export async function POST(request: NextRequest) {
  try {
    const body = await request.json()
    const { customization } = body as { customization: SystemCustomization; previewType: 'landing' }

    // Validar tipo de pré-visualização
    const validTypes = ['landing']
    if (!validTypes.includes('landing')) {
      return NextResponse.json(
        { success: false, error: 'Tipo de pré-visualização inválido' },
        { status: 400 }
      )
    }

    // Gerar CSS customizado usando o serviço
    const customCSS = configService.generateCustomCSS(customization)

    // Gerar dados de pré-visualização
    const previewData = generatePreviewData(customization)

    return NextResponse.json({
      success: true,
      data: {
        css: customCSS,
        previewData,
        previewType: 'landing'
      }
    })
  } catch (error) {
    console.error('Erro ao gerar pré-visualização:', error)
    return NextResponse.json(
      { success: false, error: 'Erro interno do servidor' },
      { status: 500 }
    )
  }
}

function generatePreviewData(customization: SystemCustomization) {
  // Apenas landing conforme escopo atual
  return {
    heroTitle: customization.landingPage.hero.title,
    heroSubtitle: customization.landingPage.hero.subtitle,
    features: customization.landingPage.features,
    ctaText: customization.landingPage.hero.ctaText
  }
}
